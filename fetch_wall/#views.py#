# Create your views here.
from django.core.urlresolvers import reverse
from django.core.servers.basehttp import FileWrapper
from django.http import HttpResponse, HttpResponseRedirect
from django.shortcuts import render_to_response
from django.template import 
import rauth
from rauth.service import OAuth2Service
import requests
from fetch_wall.export import get_spaces_list, get_statuses
import csv
redu = OAuth2Service(
        name='redu',
       	authorize_url='http://redu.com.br/oauth/authorize',
        access_token_url='http://redu.com.br/oauth/token',
        consumer_key='P2AeHTJCV9Wy31Xq8IBIvOpYT1lhbluqvFh8RPdB',
        consumer_secret='SInt2l80rnhz8YkP3zt5ThvKmeb4Srt12EezDIVe')

def redu_csv(request):
  if request.session.get('access_token'):
    token = request.session.get('access_token')
    client=0
    if request.session.get('client'):
      client=request.session['client']
    else:
      client=requests.session(params={"oauth_token":token}, headers={"content-type":"application/json"})
      request.session['client']=client
    spaces = []
    if request.session.get('spaces'):
      spaces = request.session['spaces']
    else:
      spaces=get_spaces_list(client)
      request.session['spaces'] = spaces
    
    return render_to_response('redu_csv.html', {'spaces':spaces}, context_instance=RequestContext(request))
  else:
    return HttpResponseRedirect(reverse('fetch_wall.views.get_pin'))
def get_pin(request):
  if request.POST:
    code = request.POST['code']
    data = dict(code=code,
            grant_type='authorization_code',
            redirect_uri='')
    access_token = \
        redu.get_access_token('POST', data=data).content['access_token']
    request.session['access_token'] = access_token

    return HttpResponseRedirect(reverse('fetch_wall.views.redu_csv'))
  else:
    return render_to_response('get_pin.html', {'url':redu.get_authorize_url()}, context_instance=RequestContext(request))
def clear_cookies(request):
  request.session.clear()
  return HttpResponse("Cookies limpos")
def show_space(request):
  space_id = request.session['spaces'][int(request.POST['choice'])-1]['id']
  client = request.session['client']
  posts = get_statuses(client, space_id)
  response=HttpResponse(mimetype='text/csv')
  response['Content-Disposition'] = 'attachment; filename=wall-export.csv'
  writer=csv.writer(response)
  for post in posts:
    user = post['user']
    name = user['first_name']
    name = name + " "+user['last_name']
    name=name.encode('utf-8')
    texto=post['text'].rstrip("\r\n")
    texto=texto.encode('utf-8')
    timestamp=post['created_at']
    timestamp=timestamp.encode('utf-8')
    writer.writerow([name,timestamp,texto])
  return response
  #return render_to_response('show_space.html',{'posts':posts}, context_instance=RequestContext(request))